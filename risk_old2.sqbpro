<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/kabuaisha/Risk-bot/risk.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure pragmas browser query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1674"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainplayers"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="games" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="40"/><column index="2" value="133"/><column index="3" value="133"/><column index="4" value="40"/><column index="5" value="40"/><column index="6" value="40"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="players" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="3" mode="1"/></sort><column_widths><column index="1" value="133"/><column index="2" value="110"/><column index="3" value="116"/><column index="4" value="116"/><column index="5" value="40"/><column index="6" value="40"/><column index="7" value="116"/><column index="8" value="121"/><column index="9" value="50"/><column index="10" value="40"/><column index="11" value="119"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT name, win, loss, elo, peak_elo, id, sigma, (strftime('%s', 'now') - last_played_time)
                                              FROM players 
                                             WHERE win + loss &gt; 9
                                             AND strftime('%s', 'now') - last_played_time &lt; 86400 * 14
                                             ORDER BY elo desc</sql><sql name="SQL 2">UPDATE games
SET time = (SELECT last_played_time FROM players WHERE games.p1 = players.ID)
WHERE games.ID in (SELECT max(max1, max2) as game_id FROM (SELECT p1, MAX(ID) as max1 FROM games GROUP BY(p1)) as tbl1
JOIN (SELECT p2, MAX(ID) as max2 FROM games GROUP BY(p2)) as tbl2
ON tbl1.p1 = tbl2.p2)</sql><sql name="SQL 8">UPDATE games
SET time = NULL</sql><sql name="SQL 3">SELECT p1, p2, time from games where ID in (SELECT max(max1, max2) as game_id FROM (SELECT p1, MAX(ID) as max1 FROM games GROUP BY(p1)) as tbl1
JOIN (SELECT p2, MAX(ID) as max2 FROM games GROUP BY(p2)) as tbl2
ON tbl1.p1 = tbl2.p2)
</sql><sql name="SQL 4">SELECT p1, max(max1, max2) as game_id FROM (SELECT p1, MAX(ID) as max1 FROM games GROUP BY(p1)) as tbl1
JOIN (SELECT p2, MAX(ID) as max2 FROM games GROUP BY(p2)) as tbl2
ON tbl1.p1 = tbl2.p2</sql><sql name="SQL 5">SELECT  distinct(max(max1, max2)) as game_id FROM (SELECT p1, MAX(ID) as max1 FROM games GROUP BY(p1)) as tbl1
JOIN (SELECT p2, MAX(ID) as max2 FROM games GROUP BY(p2)) as tbl2
ON tbl1.p1 = tbl2.p2</sql><sql name="SQL 6">SELECT name, win, loss, elo, peak_elo, id, sigma, (strftime('%s', 'now') - last_played_time) as seconds_ago, num
FROM players 
JOIN (SELECT p, num
			FROM (SELECT p, num1 + COALESCE(num2, 0) as num FROM (SELECT p1 as p, count(*) as num1 FROM games WHERE strftime('%s', 'now') - time &lt; 86400 * 20 GROUP BY(p1)) as tbl1
				left JOIN (SELECT p2 as p, count(*) as num2 FROM games WHERE strftime('%s', 'now') - time &lt; 86400 * 20 GROUP BY(p2)) as tbl2
				USING(p)
				UNION ALL
				SELECT p, num2 as num FROM (SELECT p2 as p, count(*) as num2 FROM games WHERE strftime('%s', 'now') - time &lt; 86400 * 20 GROUP BY(p2)) as tbl2
				left JOIN (SELECT p1 as p, count(*) as num1 FROM games WHERE strftime('%s', 'now') - time &lt; 86400 * 20 GROUP BY(p1)) as tbl1
				USING(p)
				WHERE tbl1.p is NULL)
			WHERE num &gt;= 10) tbl
ON players.id = tbl.p
ORDER BY elo desc</sql><sql name="SQL 7">SELECT * FROM (SELECT p1 as p, count(*) as num1 FROM games WHERE strftime('%s', 'now') - time &lt; 86400 * 20 GROUP BY(p1)) as tbl1
left JOIN (SELECT p2 as p, count(*) as num2 FROM games WHERE strftime('%s', 'now') - time &lt; 86400 * 20 GROUP BY(p2)) as tbl2
USING(p)
UNION ALL
SELECT * FROM (SELECT p2 as p, count(*) as num2 FROM games WHERE strftime('%s', 'now') - time &lt; 86400 * 20 GROUP BY(p2)) as tbl2
left JOIN (SELECT p1 as p, count(*) as num1 FROM games WHERE strftime('%s', 'now') - time &lt; 86400 * 20 GROUP BY(p1)) as tbl1
USING(p)</sql><sql name="SQL 10">SELECT *, DATE(time, 'unixepoch'), strftime('%s', 'now')
FROM games
WHERE ((p1=398908024338644993 and p2=266429162200367104) or (p2=398908024338644993 and p1=266429162200367104))
and time is not null
</sql><sql name="easter vs smoke">SELECT *, total_games - easter_wins as smoke_wins, CAST(easter_wins as FLOAT)/total_games as easter_winrate, 1 - CAST(easter_wins as FLOAT)/total_games as smoke_winrate FROM
(
	SELECT coalesce(DATE(time, 'unixepoch'), &quot; All games before october when I started recording time of games&quot;) as date,
	count(*) as total_games,
	sum(case when (p1=398908024338644993 and s1='won') or (p2=398908024338644993 and s2='won') Then 1 else 0 end) as easter_wins
	FROM games
	WHERE ((p1=398908024338644993 and p2=266429162200367104) or (p2=398908024338644993 and p1=266429162200367104))
	GROUP BY date
) a</sql><sql name="robots vs smoke">SELECT *, total_games - robots_wins as smoke_wins, CAST(robots_wins as FLOAT)/total_games as robots_winrate, 1 - CAST(robots_wins as FLOAT)/total_games as smoke_winrate FROM
(
	SELECT coalesce(DATE(time, 'unixepoch'), &quot; All games before october when I started recording time of games&quot;) as date,
	count(*) as total_games,
	sum(case when (p1=361548991755976704 and s1='won') or (p2=361548991755976704 and s2='won') Then 1 else 0 end) as robots_wins
	FROM games
	WHERE ((p1=361548991755976704 and p2=266429162200367104) or (p2=361548991755976704 and p1=266429162200367104))
	GROUP BY date
)</sql><sql name="robots vs easter">SELECT *, total_games - robots_wins as easter_wins, CAST(robots_wins as FLOAT)/total_games as robots_winrate, 1 - CAST(robots_wins as FLOAT)/total_games as easter_winrate FROM
(
	SELECT coalesce(DATE(time, 'unixepoch'), &quot; All games before october when I started recording time of games&quot;) as date,
	count(*) as total_games,
	sum(case when (p1=361548991755976704 and s1='won') or (p2=361548991755976704 and s2='won') Then 1 else 0 end) as robots_wins
	FROM games
	WHERE ((p1=361548991755976704 and p2=398908024338644993) or (p2=361548991755976704 and p1=398908024338644993))
	GROUP BY date
) a</sql><sql name="SQL 14">DELETE from games where ID IN (SELECT ID from games order by ID desc limit 3)</sql><sql name="SQL 15">SELECT *, total_games - sap_wins as smoke_wins, CAST(sap_wins as FLOAT)/total_games as sap_winrate, 1 - CAST(sap_wins as FLOAT)/total_games as smoke_winrate FROM
(
	SELECT coalesce(DATE(time, 'unixepoch'), &quot; All games before october when I started recording time of games&quot;) as date,
	count(*) as total_games,
	sum(case when (p1=856639858117574677 and s1='won') or (p2=856639858117574677 and s2='won') Then 1 else 0 end) as sap_wins
	FROM games
	WHERE ((p1=856639858117574677 and p2=266429162200367104) or (p2=856639858117574677 and p1=266429162200367104))
	GROUP BY date
) a</sql><current_tab id="13"/></tab_sql></sqlb_project>
